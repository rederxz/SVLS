batch_size = 2
ckpt_dir = ckpt/ckpt_brats19_svls_v7_1.2_1.2_0.1_1234
cosine_annealing_lr = False
data_root = MICCAI_BraTS_2019_Data_Training/HGG_LGG
end_scale_factor = 1.2
epochs = 200
in_channels = 4
lr = 0.0001
ls_smoothing = 0.1
num_classes = 4
start_scale_factor = 1.2
svls_alpha = 0.1
svls_ratio = 1.0
svls_sigma_diff = 0.1
svls_smoothing = 1.0
train_option = SVLS_V7
weight_decay = 0.0
train sample: 269 train minibatch: 135 valid sample: 66 valid minibatch: 33
train_option SVLS_V7
ckpt name: model_best_svls_v7.pth.tar
Current svls scale factor: 1.2
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(1.5214, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(1.3620, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(1.2197, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(1.0906, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.9894, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.9253, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.8728, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.8133, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.7838, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.7548, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.7414, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.7086, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6946, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6708, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6526, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6329, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6515, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6416, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5737, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5804, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5585, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5412, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5366, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5457, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5398, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5509, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5312, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5341, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5149, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5263, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5070, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5019, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5108, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5035, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5267, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5158, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5166, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4863, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4946, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4981, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5034, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4880, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4907, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4954, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4756, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4777, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4915, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5027, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4677, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4846, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.5010, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4669, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4831, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4750, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4731, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4760, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4619, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4731, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4724, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4670, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4721, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4538, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4693, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4829, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4522, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4498, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4781, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4417, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4554, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4408, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4370, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4536, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4521, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4418, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4347, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4378, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4370, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4255, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4322, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4179, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4269, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4479, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4234, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4212, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4205, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4830, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4427, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4190, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4373, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4068, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4361, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4148, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4019, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4213, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3910, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3912, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3884, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.4059, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3708, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3624, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3961, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3554, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3742, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3812, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3858, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3582, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3613, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3668, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3588, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3504, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3635, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3504, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3653, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3530, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3415, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3382, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3458, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3363, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3308, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3328, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3754, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3593, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3330, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3390, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3386, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3462, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3366, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3362, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3360, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3380, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3183, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3236, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3073, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
epoch:0/200, loss:0.3200, best epoch:0, best loss:0.3200, dice[ET:0.0208, TC:0.0234, WT:0.7427], best dice[ET:0.0208, TC:0.0234, WT:0.7427]
Current svls scale factor: 1.2
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3215, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3179, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3078, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3359, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3197, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3017, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3122, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3111, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3196, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3216, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3125, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3217, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2977, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3189, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3274, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2962, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3070, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3102, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3571, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3048, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3132, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3152, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3051, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2937, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2969, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3538, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2994, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3168, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2887, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2910, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3053, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2972, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2789, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2839, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2799, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2795, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3097, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2817, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2795, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3002, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3080, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2983, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2894, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2977, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2746, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2790, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2948, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2863, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2898, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2739, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2809, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2743, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2721, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2657, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.3142, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2768, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2658, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2614, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2699, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2727, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2650, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2739, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2608, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2714, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2622, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2626, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2560, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2786, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2518, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2808, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2707, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2833, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2611, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2684, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2740, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2648, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2673, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2805, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2923, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2538, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2547, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2433, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2513, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2394, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2518, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2589, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2498, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2463, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2547, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2562, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2354, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2666, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2508, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2487, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2495, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2401, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2404, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2646, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2366, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2378, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2510, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2525, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2458, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2334, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2400, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2516, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2372, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2638, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2354, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2314, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2293, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2382, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2482, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2294, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2501, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2450, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2487, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2437, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2318, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2315, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2345, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2162, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2185, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2385, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2490, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2294, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2362, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2475, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2609, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2216, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2338, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2209, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2215, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2408, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2517, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
epoch:1/200, loss:0.2237, best epoch:1, best loss:0.2237, dice[ET:0.2297, TC:0.3206, WT:0.7795], best dice[ET:0.2297, TC:0.3206, WT:0.7795]
Current svls scale factor: 1.2
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2162, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2181, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2179, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2162, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2110, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2138, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2285, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2177, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2706, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2262, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2335, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2395, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2162, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2102, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2195, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2470, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2398, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2175, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2155, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2126, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2276, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2213, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2154, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2061, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2030, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2229, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2208, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2356, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1960, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2151, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2000, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1974, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1957, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2255, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2601, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2157, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2090, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1941, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2207, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2341, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2114, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2067, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2011, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1961, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2044, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2046, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2100, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2042, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2214, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2069, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1913, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1978, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1960, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2067, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2217, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1814, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2062, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1899, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2220, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1979, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1987, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2026, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1906, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2007, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1881, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2059, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1926, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2170, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1828, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1850, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1774, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1820, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1711, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1956, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1877, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1801, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1841, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2070, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1790, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1803, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1773, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2032, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1809, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1995, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1853, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1872, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1816, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1791, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1780, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1762, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1892, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2106, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2069, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1661, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1989, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1845, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2050, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1779, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1846, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1740, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1889, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2008, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1946, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1715, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1894, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1748, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1838, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1779, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2027, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1716, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1734, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1754, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1712, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1589, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1734, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1729, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1823, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1649, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1697, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.2197, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1661, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1529, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1617, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1657, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1579, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1602, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1764, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1694, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1526, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1605, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1697, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1657, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1482, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1550, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
loss_:  tensor(0.1513, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
dist加权之前卷积核之和为0的个数： tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
after first divide: tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
tensor(0, device='cuda:0')
